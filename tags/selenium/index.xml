<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Selenium on Damien Saunders</title>
    <link>https://damien1.github.io/tags/selenium/</link>
    <description>Recent content in Selenium on Damien Saunders</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-gb</language>
    <lastBuildDate>Sun, 07 Apr 2013 21:08:35 +0000</lastBuildDate>
    
	<atom:link href="https://damien1.github.io/tags/selenium/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Continuous Integration for WordPress plugins &amp;#8211; Jenkins &amp;#8211; Selenium &amp;#8211; Apache Ant</title>
      <link>https://damien1.github.io/blog/2013-04-07-continuous-integration-for-wordpress-plugins-jenkins-selenium-apache-ant/</link>
      <pubDate>Sun, 07 Apr 2013 21:08:35 +0000</pubDate>
      
      <guid>https://damien1.github.io/blog/2013-04-07-continuous-integration-for-wordpress-plugins-jenkins-selenium-apache-ant/</guid>
      <description>I’m no regular WordPress Plugin Developer – I spend most of my day managing projects or other stuff. So when I do develop, I want a trusted, reliable, repeatable workflow setup that is always testing, always building and always telling me whats going on. That’s why I believe in Continuous Integration … and why I’ve turned to Jenkins as my CI Tool and use Apache Ant and Selenium for testing.</description>
    </item>
    
    <item>
      <title>1 minute video &amp;#8211; Isotope Visual Layouts WordPress plugin</title>
      <link>https://damien1.github.io/blog/2013-03-18-1-minute-video-isotope-visual-layouts-wordpress-plugin/</link>
      <pubDate>Mon, 18 Mar 2013 11:57:12 +0000</pubDate>
      
      <guid>https://damien1.github.io/blog/2013-03-18-1-minute-video-isotope-visual-layouts-wordpress-plugin/</guid>
      <description>Just been on a bit of a testing mission this weekend … I’ve put together this 1 minute screen recording of my WordPress plugin Isotope Visual Layouts.
The video is taken from my Selenium based testing and goes from plugin install, checking plugin options, adding a page, viewing the results and finally deleting the plugin.
 </description>
    </item>
    
    <item>
      <title>Can I get at WordPress code from inside a Selenium test?</title>
      <link>https://damien1.github.io/resources/can-i-get-at-wordpress-code-from-inside-a-selenium-test-7973/</link>
      <pubDate>Thu, 25 Oct 2012 13:27:55 +0000</pubDate>
      
      <guid>https://damien1.github.io/resources/can-i-get-at-wordpress-code-from-inside-a-selenium-test-7973/</guid>
      <description>There are many ways to skin a cat and trying to use Selenium with WordPress CLI is new to me. Essentially, WordPress is ‘just’ a dynamic website using a SQL database with some themes and plugin files behind it.
Selenium is designed as a frontend browser test tool so keep that in mind for a minute and I assume you mean Selenium IDE. The result would be very brittle test cases if you built something up with Selenium IDE + WordPress CLI.</description>
    </item>
    
    <item>
      <title>HOW TO: Install Chromedriver for Mac OS X / Selenium / Python</title>
      <link>https://damien1.github.io/resources/how-to-install-chromedriver-mac-os-x-selenium-python-7406/</link>
      <pubDate>Thu, 28 Jun 2012 14:29:43 +0000</pubDate>
      
      <guid>https://damien1.github.io/resources/how-to-install-chromedriver-mac-os-x-selenium-python-7406/</guid>
      <description>Selenium is great for automated testing of web-apps and I’ve been using the Firefox extension Selenium IDE for a few months now.
For completeness of automated testing for web apps you need to do this in a number of different browsers which Selenium IDE doesn’t do. So you’ll need to download and install Selenium on your Mac.
Download Chromedriver to your Mac Head over to the Chromedriver Project page and download the latest package.</description>
    </item>
    
    <item>
      <title>HOW TO: Get started with Selenium 2 for Mac OS X / Java</title>
      <link>https://damien1.github.io/resources/how-to-get-started-selenium-2-mac-os-x-java-7403/</link>
      <pubDate>Wed, 27 Jun 2012 13:02:01 +0000</pubDate>
      
      <guid>https://damien1.github.io/resources/how-to-get-started-selenium-2-mac-os-x-java-7403/</guid>
      <description>If you own a Mac and want to get started with Selenium for Automated Testing of your web apps, then you’re already most of the way there. The Mac operating system already offers a number of baked in solutions and command line tools like Python, Ruby and Java.
Get started with Selenium IDE and Firefox Selenium IDE is a browser extension for Firefox. It’s useful to use this to create test cases so install this first.</description>
    </item>
    
    <item>
      <title>HOW TO: Install Selenium 2 for Mac OS X / Python</title>
      <link>https://damien1.github.io/resources/how-to-install-selenium-2-mac-os-x-python-7391/</link>
      <pubDate>Sat, 23 Jun 2012 21:54:10 +0000</pubDate>
      
      <guid>https://damien1.github.io/resources/how-to-install-selenium-2-mac-os-x-python-7391/</guid>
      <description>If you own a Mac and want to get started with Selenium for Automated Testing of your web apps, then you’re already most of the way there.
The Mac operating system already offers a number of baked in solutions and command line tools like Python, Ruby and Java.
How To Install Selenium on your Mac OSx Mac already has Python and a package manager called easy_install, so open Terminal and type</description>
    </item>
    
    <item>
      <title>Web Application &amp;#038; Automated Testing &amp;#8211; Firefox &amp;#038; Selenium IDE</title>
      <link>https://damien1.github.io/resources/web-application-automated-testing-firefox-selenium-ide-6979/</link>
      <pubDate>Fri, 18 May 2012 09:56:53 +0000</pubDate>
      
      <guid>https://damien1.github.io/resources/web-application-automated-testing-firefox-selenium-ide-6979/</guid>
      <description>I’ve just getting started automated testing with Selenium for a number of web appprojects that we’ve been developing lately. My background has been all about managing the project, test plans and manual test execution, so the learning curve is a bit steep.
Automated testing fits in well with Agile and Scrum project management. Using Selenium IDE you can first create the test case, try it out manually and then when development is finished, you just run the automated test.</description>
    </item>
    
  </channel>
</rss>